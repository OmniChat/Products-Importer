import Parse = require("parse/node");
import { OmniChatSchema } from './Schema'
import { Associated } from './Associated';
import { Retailer } from './Retailer';

export class Association extends Parse.Object {
  constructor(attributes?: any) {
    super('Association', attributes)
  }

  /** when the associated brought the retailer. OmniChat will start to paid fees*/
  get start(): Date { return this.get('start') }
  set start(value: Date) { this.set('start', value) }

  /** when the omnichat will stop paying the fees*/
  get end(): Date { return this.get('end') }
  set end(value: Date) { this.set('end', value) }

  /** the percentage of the omnichat fee that will be paid to the associated*/
  get salesComissionPercentage(): number { return this.get('salesComissionPercentage') }
  set salesComissionPercentage(value: number) { this.set('salesComissionPercentage', value) }

  /** the percentage of the omnichat fee that will be paid to the associated*/
  get totalCommissionsEarned(): number { return this.get('totalCommissionsEarned') }
  set totalCommissionsEarned(value: number) { this.set('totalCommissionsEarned', value) }

  /** the associated that owns this association*/
  get associated(): Associated { return this.get('associated') }
  set associated(value: Associated) { this.set('associated', value) }

  /** the associated that owns this association*/
  get retailer(): Retailer { return this.get('retailer') }
  set retailer(value: Retailer) { this.set('retailer', value) }
}

Parse.Object.registerSubclass('Association', Association);