import Parse = require("parse/node");
import { OmniChatSchema } from './Schema'
import { Order } from './Order';
import { CreditCard } from './CreditCard';
import { Boleto } from './Boleto';

export enum PaymentStatus {
    Created = 'CREATED',
    Waiting = 'WAITING',
    Authorized = 'AUTHORIZED',
    Settled = 'SETTLED',
    NotPaid = 'NOT_PAID',
    Cancelled = 'CANCELLED'
}

export class Payment extends Parse.Object {

    constructor(attributes?: any) {
        super('Payment', attributes)
    }

    get payGwId(): string { return this.get('payGwId') }
    set payGwId(value: string) { this.set('payGwId', value) }

    get status(): PaymentStatus { return this.get('status') }
    set status(value: PaymentStatus) { this.set('status', value) }

    get order(): Order { return this.get('order') }
    set order(value: Order) { this.set('order', value) }

    get creditCard(): CreditCard { return this.get('creditCard') }
    set creditCard(value: CreditCard) { this.set('creditCard', value) }

    get boleto(): Boleto { return this.get('boleto') }
    set boleto(value: Boleto) { this.set('boleto', value) }

    get paymentMethod(): OmniChatSchema.PaymentMethod { return this.get('paymentMethod') }
    set paymentMethod(value: OmniChatSchema.PaymentMethod) { this.set('paymentMethod', value) }

    get installmentCount(): number { return this.get('installmentCount') }
    set installmentCount(value: number) { this.set('installmentCount', value) }

    get saveCreditCard(): boolean { return this.get('saveCreditCard') }
    set saveCreditCard(value: boolean) { this.set('saveCreditCard', value) }

    get useSavedCredirCard(): boolean { return this.get('useSavedCredirCard') }
    set useSavedCredirCard(value: boolean) { this.set('useSavedCredirCard', value) }

    get cvvForSavedCreditCard(): string { return this.get('cvvForSavedCreditCard') }
    set cvvForSavedCreditCard(value: string) { this.set('cvvForSavedCreditCard', value) }

    get omnichatCommission(): number { return this.get('omnichatCommission') }
    set omnichatCommission(value: number) { this.set('omnichatCommission', value) }


}

Parse.Object.registerSubclass('Payment', Payment);