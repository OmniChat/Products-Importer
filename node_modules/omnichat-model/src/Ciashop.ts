import Parse = require("parse/node");
import { OmniChatSchema } from './Schema'
import { CiashopSecure } from './CiashopSecure';


export class Ciashop extends Parse.Object {
    constructor(attributes?: any) {
        super('Ciashop', attributes)
    }

    get webhookIds(): Array<string> { return this.get('webhookIds') }
    set webhookIds(value: Array<string>) { this.set('webhookIds', value) }

    get variantPlaceHolderId(): string { return this.get('variantPlaceHolderId') }
    set variantPlaceHolderId(value: string) { this.set('variantPlaceHolderId', value) }

    get defaultDepartmentId(): string { return this.get('defaultDepartmentId') }
    set defaultDepartmentId(value: string) { this.set('defaultDepartmentId', value) }

    get status(): OmniChatSchema.CiashopStatus { return this.get('status') }
    set status(value: OmniChatSchema.CiashopStatus) { this.set('status', value) }

    get importationStatus(): OmniChatSchema.CiashopImportationStatus { return this.get('importationStatus') }
    set importationStatus(value: OmniChatSchema.CiashopImportationStatus) { this.set('importationStatus', value) }

    get customersLastUpdatedAt(): Date { return this.get('customersLastUpdatedAt') }
    set customersLastUpdatedAt(value: Date) { this.set('customersLastUpdatedAt', value) }

    get productsLastUpdatedAt(): Date { return this.get('productsLastUpdatedAt') }
    set productsLastUpdatedAt(value: Date) { this.set('productsLastUpdatedAt', value) }

    /** Features that are not enable by default */
    get additionalFeatures(): Array<OmniChatSchema.CiashopAdditionalFeatures> { return this.get('additionalFeatures') }
    set additionalFeatures(value: Array<OmniChatSchema.CiashopAdditionalFeatures>) { this.set('additionalFeatures', value) }

    /** Most recent updatedAt property received from the synced PricingTable objects */
    get pricingTablesLastUpdatedAt(): Date { return this.get('pricingTablesLastUpdatedAt') }
    set pricingTablesLastUpdatedAt(value: Date) { this.set('pricingTablesLastUpdatedAt', value) }

    get retailerURL(): string { return this.get('retailerURL') }
    set retailerURL(value: string) { this.set('retailerURL', value) }

    /**
     * Ciashop product has three prices: price, salePrice and promotionPrice.
     * The promotion price is a result of a external promotion rule which OmniChat
     * does not have access to. Therefor is up to the store to enable it or not.
     * The default value is false
     * 
     * @type {boolean}
     * @memberof Ciashop
     */
    get usePromotionPrice(): boolean { return this.get('usePromotionPrice') }
    set usePromotionPrice(value: boolean) { this.set('usePromotionPrice', value) }

    get errorDescription(): string { return this.get('errorDescription') }
    set errorDescription(value: string) { this.set('errorDescription', value) }

    get ciashopSecure(): CiashopSecure { return this.get('ciashopSecure') }
    set ciashopSecure(value: CiashopSecure) { this.set('ciashopSecure', value) }

    /**
     * Webhooks will be discarted, store will be only updated bia nightly sync
     */
    get webhookDisabled(): boolean { return this.get('webhookDisabled') }
    set webhookDisabled(value: boolean) { this.set('webhookDisabled', value) }
}

Parse.Object.registerSubclass('Ciashop', Ciashop);