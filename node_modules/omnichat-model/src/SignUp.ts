import Parse = require("parse/node");
import { OmniChatSchema } from './Schema'

export class SignUp extends Parse.Object {
  constructor(attributes?: any) {
    super('SignUp', attributes)
  }

  get retailerName(): string { return this.get('retailerName') }
  set retailerName(value: string) { this.set('retailerName', value) }

  get streetNumber(): string { return this.get('streetNumber') }
  set streetNumber(value: string) { this.set('streetNumber', value) }

  get street(): string { return this.get('street') }
  set street(value: string) { this.set('street', value) }

  get suburb(): string { return this.get('suburb') }
  set suburb(value: string) { this.set('suburb', value) }

  get state(): string { return this.get('state') }
  set state(value: string) { this.set('state', value) }

  get city(): string { return this.get('city') }
  set city(value: string) { this.set('city', value) }

  get zipCode(): string { return this.get('zipCode') }
  set zipCode(value: string) { this.set('zipCode', value) }

  get ecommerceSite(): string { return this.get('ecommerceSite') }
  set ecommerceSite(value: string) { this.set('ecommerceSite', value) }

  get ecommerceSiteOther(): string { return this.get('ecommerceSiteOther') }
  set ecommerceSiteOther(value: string) { this.set('ecommerceSiteOther', value) }

  get businessSegment(): string { return this.get('businessSegment') }
  set businessSegment(value: string) { this.set('businessSegment', value) }

  get businessSegmentOther(): string { return this.get('businessSegmentOther') }
  set businessSegmentOther(value: string) { this.set('businessSegmentOther', value) }

  get companySize(): string { return this.get('companySize') }
  set companySize(value: string) { this.set('companySize', value) }

  get name(): string { return this.get('name') }
  set name(value: string) { this.set('name', value) }

  get lastName(): string { return this.get('lastName') }
  set lastName(value: string) { this.set('lastName', value) }

  get email(): string { return this.get('email') }
  set email(value: string) { this.set('email', value) }

  get phoneNumber(): string { return this.get('phoneNumber') }
  set phoneNumber(value: string) { this.set('phoneNumber', value) }

  get phoneCountry(): string { return this.get('phoneCountry') }
  set phoneCountry(value: string) { this.set('phoneCountry', value) }

  get phoneAreaCode(): string { return this.get('phoneAreaCode') }
  set phoneAreaCode(value: string) { this.set('phoneAreaCode', value) }

  get apps(): OmniChatSchema.SocialAppsUsage { return this.get('apps') }
  set apps(value: OmniChatSchema.SocialAppsUsage) { this.set('apps', value) }

  get ecommercePlatform(): string { return this.get('ecommercePlatform') }
  set ecommercePlatform(value: string) { this.set('ecommercePlatform', value) }

  get ecommercePlatformOther(): string { return this.get('ecommercePlatformOther') }
  set ecommercePlatformOther(value: string) { this.set('ecommercePlatformOther', value) }

}

Parse.Object.registerSubclass('SignUp', SignUp);