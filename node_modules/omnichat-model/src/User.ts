import Parse = require("parse/node");
import { Retailer } from './Retailer';
import { PricingTable } from './PricingTable';

export enum UserStatus {
    LoogedIn = "LOGGEDIN",
    LoogedOut = "LOGGEDOUT",
    Away = "AWAY"
}

export enum WebPushEvent {
    Chat = "CHAT",

    // Only the orders that I have created
    OrderStatus = "ORDER_STATUS",

    // All retailer orders, must be admin
    OrderStatusAll = "ORDER_STATUS_ALL"
}

export class User extends Parse.User {
    constructor(attributes?: any) {
        super('User', attributes)
    }

    get email(): string { return this.getEmail() }
    set email(value: string) { this.setEmail(value) }

    get name(): string { return this.get('name') }
    set name(value: string) { this.set('name', value) }

    get lastName(): string { return this.get('lastName') }
    set lastName(value: string) { this.set('lastName', value) }

    get retailer(): Retailer { return this.get('retailer') }
    set retailer(value: Retailer) { this.set('retailer', value) }

    /* This user is only for API access */
    get apiUser(): boolean { return this.get('apiUser') }
    set apiUser(value: boolean) { this.set('apiUser', value) }

    get whatsAppNumber(): string { return this.get('whatsAppNumber') }
    set whatsAppNumber(value: string) { this.set('whatsAppNumber', value) }

    get status(): UserStatus { return this.get('status') }
    set status(value: UserStatus) { this.set('status', value) }

    get pricingTable(): PricingTable { return this.get('pricingTable') }
    set pricingTable(value: PricingTable) { this.set('pricingTable', value) }

    get webPushEndpoint(): object { return this.get('webPushEndpoint') }
    set webPushEndpoint(value: object) { this.set('webPushEndpoint', value) }

    get webPushEvents(): Array<WebPushEvent> { return this.get('webPushEvents') }
    set webPushEvents(value: Array<WebPushEvent>) { this.set('webPushEvents', value) }

}

Parse.Object.registerSubclass('User', User);