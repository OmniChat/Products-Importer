import Parse = require("parse/node");
import { OmniChatSchema } from './Schema'
import { Retailer } from './Retailer';
import { User } from './User';

export class Collection extends Parse.Object {
    constructor(attributes?: any) {
        super('Collection', attributes)
    }

    get name(): string { return this.get('name') }
    set name(value: string) { this.set('name', value) }

    get description(): string { return this.get('description') }
    set description(value: string) { this.set('description', value) }

    get image(): Parse.File { return this.get('image') }
    set image(value: Parse.File) { this.set('image', value) }

    get products(): Parse.Relation { return this.get('products') }
    set products(value: Parse.Relation) { this.set('products', value) }

    get retailer(): Parse.File { return this.get('retailer') }
    set retailer(value: Parse.File) { this.set('retailer', value) }

    get salesPerson(): User { return this.get('salesPerson') }
    set salesPerson(value: User) { this.set('salesPerson', value) }

    // collection is blocked for sales.
    get blocked(): boolean { return this.get('blocked') }
    set blocked(value: boolean) { this.set('blocked', value) }
}

Parse.Object.registerSubclass('Collection', Collection);