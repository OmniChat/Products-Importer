"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Parse = require("parse/node");
var QueueingMode;
(function (QueueingMode) {
    QueueingMode["Sequential"] = "SEQUENTIAL";
    QueueingMode["Random"] = "RANDOM";
    QueueingMode["Disabled"] = "DISABLED";
    QueueingMode["SingleNumber"] = "SINGLE_NUMBER";
    // Only available when retailer.whatsapp.ready === true
    QueueingMode["IntegratedSingleNumber"] = "INTEGRATED_SINGLE_NUMBER";
})(QueueingMode = exports.QueueingMode || (exports.QueueingMode = {}));
class CustomerSupportButton extends Parse.Object {
    constructor(attributes) {
        super('CustomerSupportButton', attributes);
    }
    get tradingHours() { return this.get('tradingHours'); }
    set tradingHours(value) { this.set('tradingHours', value); }
    get retailer() { return this.get('retailer'); }
    set retailer(value) { this.set('retailer', value); }
    get afterHoursMessage() { return this.get('afterHoursMessage'); }
    set afterHoursMessage(value) { this.set('afterHoursMessage', value); }
    get afterHoursMessageEnable() { return this.get('afterHoursMessageEnable'); }
    set afterHoursMessageEnable(value) { this.set('afterHoursMessageEnable', value); }
    get closingReasonOptions() { return this.get('closingReasonOptions'); }
    set closingReasonOptions(value) { this.set('closingReasonOptions', value); }
    /**
     * Apenas em uso para o botão do WhatsApp direct.
     *
     */
    /* Apenas valido quando queueingMode === SingleNumber*/
    get singleCountryCode() { return this.get('singleCountryCode'); }
    set singleCountryCode(value) { this.set('singleCountryCode', value); }
    /* Apenas valido quando queueingMode === SingleNumber*/
    get singlePhoneAreaCode() { return this.get('singlePhoneAreaCode'); }
    set singlePhoneAreaCode(value) { this.set('singlePhoneAreaCode', value); }
    /* Apenas valido quando queueingMode === SingleNumber*/
    get singlePhoneNumber() { return this.get('singlePhoneNumber'); }
    set singlePhoneNumber(value) { this.set('singlePhoneNumber', value); }
    /* A palavra de ação que irá aparcer no botão. Ex.: Compre*/
    get actionWord() { return this.get('actionWord'); }
    set actionWord(value) { this.set('actionWord', value); }
    get queueingMode() { return this.get('queueingMode'); }
    set queueingMode(value) { this.set('queueingMode', value); }
    get users() { return this.get('users'); }
    set users(value) { this.set('users', value); }
    /* Apenas valido quando queueingMode === SingleNumber*/
    get lastUserCalled() { return this.get('lastUserCalled'); }
    set lastUserCalled(value) { this.set('lastUserCalled', value); }
}
exports.CustomerSupportButton = CustomerSupportButton;
Parse.Object.registerSubclass('CustomerSupportButton', CustomerSupportButton);
//# sourceMappingURL=CustomerSupportButton.js.map