"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Parse = require("parse/node");
var PaymentStatus;
(function (PaymentStatus) {
    PaymentStatus["Created"] = "CREATED";
    PaymentStatus["Waiting"] = "WAITING";
    PaymentStatus["Authorized"] = "AUTHORIZED";
    PaymentStatus["Settled"] = "SETTLED";
    PaymentStatus["NotPaid"] = "NOT_PAID";
    PaymentStatus["Cancelled"] = "CANCELLED";
})(PaymentStatus = exports.PaymentStatus || (exports.PaymentStatus = {}));
class Payment extends Parse.Object {
    constructor(attributes) {
        super('Payment', attributes);
    }
    get payGwId() { return this.get('payGwId'); }
    set payGwId(value) { this.set('payGwId', value); }
    get status() { return this.get('status'); }
    set status(value) { this.set('status', value); }
    get order() { return this.get('order'); }
    set order(value) { this.set('order', value); }
    get creditCard() { return this.get('creditCard'); }
    set creditCard(value) { this.set('creditCard', value); }
    get boleto() { return this.get('boleto'); }
    set boleto(value) { this.set('boleto', value); }
    get paymentMethod() { return this.get('paymentMethod'); }
    set paymentMethod(value) { this.set('paymentMethod', value); }
    get installmentCount() { return this.get('installmentCount'); }
    set installmentCount(value) { this.set('installmentCount', value); }
    get saveCreditCard() { return this.get('saveCreditCard'); }
    set saveCreditCard(value) { this.set('saveCreditCard', value); }
    get useSavedCredirCard() { return this.get('useSavedCredirCard'); }
    set useSavedCredirCard(value) { this.set('useSavedCredirCard', value); }
    get cvvForSavedCreditCard() { return this.get('cvvForSavedCreditCard'); }
    set cvvForSavedCreditCard(value) { this.set('cvvForSavedCreditCard', value); }
    get omnichatCommission() { return this.get('omnichatCommission'); }
    set omnichatCommission(value) { this.set('omnichatCommission', value); }
}
exports.Payment = Payment;
Parse.Object.registerSubclass('Payment', Payment);
//# sourceMappingURL=Payment.js.map