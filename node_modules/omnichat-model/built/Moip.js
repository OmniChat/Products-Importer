"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Parse = require("parse/node");
class Moip extends Parse.Object {
    constructor(attributes) {
        super('Moip', attributes);
    }
    get status() { return this.get('status'); }
    set status(value) { this.set('status', value); }
    get installmentsWithoutInterest() { return this.get('installmentsWithoutInterest'); }
    set installmentsWithoutInterest(value) { this.set('installmentsWithoutInterest', value); }
    get minimumInstallmentValue() { return this.get('minimumInstallmentValue'); }
    set minimumInstallmentValue(value) { this.set('minimumInstallmentValue', value); }
    get canAcceptBoleto() { return this.get('canAcceptBoleto'); }
    set canAcceptBoleto(value) { this.set('canAcceptBoleto', value); }
    get boletoMinimumOrderTotal() { return this.get('boletoMinimumOrderTotal'); }
    set boletoMinimumOrderTotal(value) { this.set('boletoMinimumOrderTotal', value); }
    get boletoExpirationDays() { return this.get('boletoExpirationDays'); }
    set boletoExpirationDays(value) { this.set('boletoExpirationDays', value); }
    get boletoMaxInstallments() { return this.get('boletoMaxInstallments'); }
    set boletoMaxInstallments(value) { this.set('boletoMaxInstallments', value); }
    get boletoInstructions() { return this.get('boletoInstructions'); }
    set boletoInstructions(value) { this.set('boletoInstructions', value); }
    get bankNumber() { return this.get('bankNumber'); }
    set bankNumber(value) { this.set('bankNumber', value); }
    get accountType() { return this.get('accountType'); }
    set accountType(value) { this.set('accountType', value); }
    get moipSecure() { return this.get('moipSecure'); }
    set moipSecure(value) { this.set('moipSecure', value); }
    /*
    * This will make us to send all information necessary to enable Moip to perform
    * fraud analysis. Without it all payments will go straight to the acquirer
    */
    get enableFraudControl() { return this.get('enableFraudControl'); }
    set enableFraudControl(value) { this.set('enableFraudControl', value); }
}
exports.Moip = Moip;
Parse.Object.registerSubclass('Moip', Moip);
//# sourceMappingURL=Moip.js.map