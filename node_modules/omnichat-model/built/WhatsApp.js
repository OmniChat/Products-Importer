"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Parse = require("parse/node");
/**
* All possible states reflecting Whatsapp Integration
* Configuring - Getting password
* Ready - Ready to use.
* Error - Something wrong happend
*/
var WhatsApptatus;
(function (WhatsApptatus) {
    WhatsApptatus["Requested"] = "REQUESTED";
    WhatsApptatus["SmsSent"] = "SMS_SENT";
    WhatsApptatus["SmsCodeSaved"] = "SMS_CODE_SAVED";
    WhatsApptatus["Ready"] = "READY";
    WhatsApptatus["Error"] = "ERROR"; // Algo errado ocorreu, ver propriedade errorMessage
})(WhatsApptatus = exports.WhatsApptatus || (exports.WhatsApptatus = {}));
class WhatsApp extends Parse.Object {
    constructor(attributes) {
        super('WhatsApp', attributes);
    }
    /** Integration status  */
    get status() { return this.get('status'); }
    set status(value) { this.set('status', value); }
    /** SMS code sent by WhatsApp */
    get smsCode() { return this.get('smsCode'); }
    set smsCode(value) { this.set('smsCode', value); }
    /** If  status === 'ERROR', it will contain more details about the error */
    get errorMessage() { return this.get('errorMessage'); }
    set errorMessage(value) { this.set('errorMessage', value); }
    /** 5541991012421*/
    get retailerId() { return this.get('retailerId'); }
    set retailerId(value) { this.set('retailerId', value); }
    get greetingMessageEnabled() { return this.get('greetingMessageEnabled'); }
    set greetingMessageEnabled(value) { this.set('greetingMessageEnabled', value); }
    get greetingMessage() { return this.get('greetingMessage'); }
    set greetingMessage(value) { this.set('greetingMessage', value); }
    get afterHoursMessageEnabled() { return this.get('afterHoursMessageEnabled'); }
    set afterHoursMessageEnabled(value) { this.set('afterHoursMessageEnabled', value); }
    get tradingHours() { return this.get('tradingHours'); }
    set tradingHours(value) { this.set('tradingHours', value); }
    get afterHoursMessage() { return this.get('afterHoursMessage'); }
    set afterHoursMessage(value) { this.set('afterHoursMessage', value); }
    get profilePicture() { return this.get('profilePicture'); }
    set profilePicture(value) { this.set('profilePicture', value); }
    // Tempor√°rio
    get whatsappWebConnector() { return this.get('whatsappWebConnector'); }
    set whatsappWebConnector(value) { this.set('whatsappWebConnector', value); }
    get whatsappConnectorUrl() { return this.get('whatsappConnectorUrl'); }
    set whatsappConnectorUrl(value) { this.set('whatsappConnectorUrl', value); }
}
exports.WhatsApp = WhatsApp;
Parse.Object.registerSubclass('WhatsApp', WhatsApp);
//# sourceMappingURL=WhatsApp.js.map