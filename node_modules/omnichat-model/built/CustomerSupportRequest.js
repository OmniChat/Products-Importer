"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Parse = require("parse/node");
class CustomerSupportRequest extends Parse.Object {
    constructor(attributes) {
        super('CustomerSupportRequest', attributes);
    }
    /** The type of this support request*/
    get type() { return this.get('type'); }
    set type(value) { this.set('type', value); }
    /** As the salesperson gives customer support the status of this request changes */
    get status() { return this.get('status'); }
    set status(value) { this.set('status', value); }
    /** Additional notes about this request */
    get notes() { return this.get('notes'); }
    set notes(value) { this.set('notes', value); }
    /** The name of the person requesting support */
    get name() { return this.get('name'); }
    set name(value) { this.set('name', value); }
    /** Where the person requesting support came from. Ex: WHATSAPP  */
    get source() { return this.get('source'); }
    set source(value) { this.set('source', value); }
    /**
     * More details about the request.
     * Ex:
     *   - the url that the user was when he or she requested support or
     *   - the name of the collection selected.
     *   - the text of the message (Chat)
     * */
    get sourceDetail() { return this.get('sourceDetail'); }
    set sourceDetail(value) { this.set('sourceDetail', value); }
    /** The customer identification related to the source. Ex: 41991012421 */
    get sourceId() { return this.get('sourceId'); }
    set sourceId(value) { this.set('sourceId', value); }
    /** What happend with this request*/
    get closingReason() { return this.get('closingReason'); }
    set closingReason(value) { this.set('closingReason', value); }
    /** when the salesperson pickedup this request*/
    get contactedAt() { return this.get('contactedAt'); }
    set contactedAt(value) { this.set('contactedAt', value); }
    /** The user that picked this request*/
    get contactedBy() { return this.get('contactedBy'); }
    set contactedBy(value) { this.set('contactedBy', value); }
    /** when the salesperson finished this request*/
    get finishedAt() { return this.get('finishedAt'); }
    set finishedAt(value) { this.set('finishedAt', value); }
    /** The user that finished this request*/
    get finishedBy() { return this.get('finishedBy'); }
    set finishedBy(value) { this.set('finishedBy', value); }
    /** The salesperson that is currently responsible for this request*/
    get user() { return this.get('user'); }
    set user(value) { this.set('user', value); }
    /** All The salesperson got involed with this request*/
    get participatingUsers() { return this.get('participatingUsers'); }
    set participatingUsers(value) { this.set('participatingUsers', value); }
    /** The retailer that owns this request*/
    get retailer() { return this.get('retailer'); }
    set retailer(value) { this.set('retailer', value); }
    /**
    * Used to control that only a single user get the requests.
    * only the backend uses it. Don't change its value
    */
    get semaphore() { return this.get('semaphore'); }
    set semaphore(value) { this.set('semaphore', value); }
    get retailerCreated() { return this.get('retailerCreated'); }
    set retailerCreated(value) { this.set('retailerCreated', value); }
}
exports.CustomerSupportRequest = CustomerSupportRequest;
Parse.Object.registerSubclass('CustomerSupportRequest', CustomerSupportRequest);
//# sourceMappingURL=CustomerSupportRequest.js.map